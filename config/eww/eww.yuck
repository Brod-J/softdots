(defvar IMAGE "images/profile.png")
(defpoll username :interval "48h"  "whoami")

(defpoll uptime :interval "50s" "uptime -p | sed -e 's/up //;s/ hours,/h/;s/ hour,/h/;s/ minutes/m/;s/ minute/m/'")

(defpoll time_hour :interval "5m"
       "date +\"%I\"")
(defpoll time_year :interval "5m"
       "date +\"%C\"")
(defpoll time_min :interval "5s"
       "date +\"%M\"")
(defpoll time_mer :interval "12h"
        "date +\"%p\"")
(defpoll time_day :interval "30m"
       "date +\"%d\"")
(defpoll time_month :interval "48h"
      "date +\%m")
(defpoll time_day_name :interval "30m"
       "date +\"%A\"")
(defpoll time_month_name :interval "48h"
      "date +\%B")


;; Music vars
(defpoll SONG :interval "1s" `scripts/music_info --song`)
(defpoll ARTIST :interval "1s" `scripts/music_info --artist`)
(defpoll STATUS :interval "1s" `scripts/music_info --status`)
(defpoll CURRENT :interval "1s" `scripts/music_info --time`)
(defpoll COVER :interval "1s" `scripts/music_info --cover`)
(defpoll CTIME :interval "1s" `scripts/music_info --ctime`)
(defpoll TTIME :interval "1s" `scripts/music_info --ttime`)


(defwidget time [] 
		(box  
             :orientation "v"
             :space-evenly "false" 
             :vexpand "false" 
             :hexpand "false" 
             :spacing 4
		(box  
             :orientation "h" 
             :space-evenly "false" 
             :vexpand "false" 
             :halign "start"
             :hexpand "false" 
             :spacing 0
			 (label :class "hour_class" 
                    :valign "start" 
                    :halign "start"
                    :wrap "true" 
                    :limit-width 50
                    :text time_hour)
			 (label :class "minute_class" 
                    :valign "start" 
                    :halign "start" 
                    :wrap "true" 
                    :limit-width 50
                    :text time_min)
			 (label :class "mer_class" 
                    :valign "start" 
                    :halign "start" 
                    :wrap "true" 
                    :text time_mer))
            (box :orientation "h" 
              :spacing 0 
              :space-evenly "false" 
              :halign "start"
              :vexpand "false" :hexpand "false" 
			  (label :class "day_class" 
                     :valign "start" 
                     :text time_day)
			  (label :class "time_sep"
                     :valign "start" 
                     :text " ")
			  (label :class "month_class" 
                     :valign "start" 
                     :text time_month))
            (box :orientation "h" 
              :spacing 0 
              :space-evenly "false" 
              :halign "start"
              :vexpand "false" :hexpand "false" 
			  (label :class "day_class_n" 
                     :valign "start" 
                     :text time_day_name)
			  (label :class "time_sep_class"
                     :valign "start" 
                     :text ", ")
			  (label :class "month_class_n" 
                     :valign "start" 
                     :text time_month_name))))


(defwidget music []
        (box :class "genwin" :orientation "h" :space-evenly "false" :vexpand "false" :hexpand "false"
		(box :class "album_art" :vexpand "false" :hexpand "false" :style "background-image: url('${COVER}');")
		(box :orientation "v" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false"
			(label :halign "center" :class "song" :wrap "true" :limit-width 20 :text SONG)
			(label :halign "center" :class "artist" :wrap "true" :limit-width 15 :text ARTIST)
			(box :orientation "h" :spacing 20 :halign "center" :space-evenly "true" :vexpand "false" :hexpand "false"
				(button :class "btn_prev" :onclick "scripts/music_info --prev" "玲")
				(button :class "btn_play" :onclick "scripts/music_info --toggle" STATUS)
				(button :class "btn_next" :onclick "scripts/music_info --next" "怜"))
			(box :class "music_bar" :halign "center" :vexpand "false" :hexpand "false"
				(scale :onscroll "mpc -q seek +1" :min 0 :active "true" :max 100 :value CURRENT)))))


		(defwidget audio []
			(box :vexpand "false" :hexpand "false"
				(box :orientation "h" :spacing 25 :halign "center" :valign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
					(box :class "volume_bar" :orientation "v" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false"
                            (scale :flipped "true" :orientation "v" :min 0 :max 101 :value volume_percent :onchange "amixer -D pulse sset Master {}%" )
                            (label  :text "" :class "vol_icon"))
					(box :class "mic_bar" :orientation "v" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false"
                            (scale :flipped "true" :orientation "v" :min 0 :max 101 :value mic_percent :active "false")
                            (label  :text "" :class "mic_icon")))))





(defwindow time :stacking "bg" :focusable "false" :monitor 0
  :geometry (geometry :anchor "left top"
        :width "260px"
        :height "100"
        :x "30px"
        :y "380px")
  (time))

(defwindow time2 :stacking "bg" :focusable "false" :monitor 1
  :geometry (geometry :anchor "left top"
        :width "260px"
        :height "100"
        :x "30px"
        :y "570px")
  (time))

;; music
(defwindow music :stacking "bg" :focusable "false" :monitor 0
	    :geometry (geometry :anchor "left top"
	    :x 20
	    :y 140
	    :width 610
	    :height 280)
  (music))

;; music on monitor 1
(defwindow music2 :stacking "bg" :focusable "false" :monitor 1
	    :geometry (geometry :anchor "left top"
	    :x 20
	    :y 140
	    :width 610
	    :height 280)
  (music))

